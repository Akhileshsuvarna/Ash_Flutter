name: "Build & Release"
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  # build-android:
  #   name: Test, Build & upload aab
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v2
  #       with:
  #         distribution: 'temurin'
  #         java-version: '8'
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '2.10.1'
  #         channel: 'stable'
  #     - name: Increment Build number
  #       run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.(${{github.run_number}})/e' pubspec.yaml
  #     - name: Get Flutter Pub
  #       run: flutter pub get
  #     - run: flutter pub get
  #     # - run: flutter test 
  #     - name: Decoding android/key.properties
  #       run: echo "${{ secrets.KEYPROP_PROD }}" | base64 --decode > android/key.properties
  #     - name: Decoding android/neumodore_key.jks
  #       run: echo "${{ secrets.KEYJKS_PROD }}" | base64 --decode > android/app/key.jks
  #     - run: flutter build appbundle --release --no-sound-null-safety
  #     - name: upload aab to artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: app-release-aab
  #         path: 'build/app/outputs/bundle/release/app-release.aab'
  #     - name: upload mapping file to artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: android-mapping
  #         path: 'build/app/outputs/mapping/release/mapping.txt'
  #     # - name: Upload to slack step
  #     #   uses: adrey/slack-file-upload-action@master
  #     #   with:
  #     #     token: ${{ secrets.SLACK_WEBHOOK }}
  #     #     path: 'build/app/outputs/bundle/app-release.aab'
  #     #     channel: healthconnector
  build-ios:
    name: Test, Build & upload ipa
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
      - name: Increment Build number
        run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.(${{github.run_number}})/e' pubspec.yaml
      - name: Get Flutter Pub
        run: flutter pub get
      # - name: Build iOS App
      #   run: |
      #     flutter build ios --no-codesign --no-sound-null-safety
      #     cd build/ios/iphoneos
      #     mkdir Payload
      #     cd Payload
      #     ln -s ../Runner.app
      #     cd ..
      #     zip -r app.ipa Payload
      # - name: upload ipa to artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: app-release-ipa
      #     path: 'build/ios/iphoneos/app.ipa'
      #     if-no-files-found: echo "app.ipa not found"
      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.5.0
        with:
          project-path: ios/Runner.xcodeproj
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: "iPhone Distribution"
          team-id: ${{ secrets.TEAM_ID }}
          workspace-path: ios/Runner.xcworkspace
          scheme: "Runner"
      - name: Rename ipa
        run:  mv output.ipa app.ipa
      - name: upload ipa
        uses: actions/upload-artifact@v1
        with:
          name: app-release-ipa
          path: app.ipa
  # testlab:
  #   name: Run UI tests with Firebase Test Lab
  #   needs: build-android
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download app APK
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: app-release-apk
      
  #     - name: 'Auth Google CLI'
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         credentials_json: '${{ secrets.GCP_FIREBASE_CEREDENTIALS }}'

  #     - name: Login to Google Cloud
  #       uses: google-github-actions/setup-gcloud@v0
  #       with:
  #         version: '270.0.0'
  #         service_account_key: ${{ secrets.GCP_FIREBASE_CEREDENTIALS }}

  #     - name: Run Robo Tests in Firebase Test Lab
  #       run: gcloud firebase test android run --type robo --app app-release-apk/app-release.apk
  # deploy-playstore:
  #   name: 'Upload Android build to PlayStore console'
  #   needs: [build-android]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download app bundle from artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: app-release-aab
  #     - name: Download android mapping from artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: android-mapping
  #     # - name: Add whatsnew message CA
  #     #   run: echo ${{ github.event.head_commit.message }} >> ./whatsNewDirectory/whatsnew-en-CA
  #     # - name: Add whatsnew message US
  #     #   run: echo ${{ github.event.head_commit.message }} >> ./whatsNewDirectory/whatsnew-en-US
  #     - name: Upload Abb Bundle
  #       uses: r0adkll/upload-google-play@v1.0.15
  #       with:
  #         serviceAccountJson: service_account.json
  #         packageName: com.livvinyl.healthconnector.app
  #         releaseFiles: app-release-aab/*.aab
  #         track: internal
  #         inAppUpdatePriority: 5
  #         # userFraction: 1.0
  #         # whatsNewDirectory: whatsNewDirectory/whatsnew
  #         mappingFile:  android-mapping/mapping.txt
  deploy-TestFlight:
    name: 'Upload app to TestFlight'
    needs: [build-ios]
    runs-on: macos-latest

    steps:
      - name: Download ipa from artifacts
        uses: actions/download-artifact@v1
        with:
          name: app-release-ipa
      - uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: 'app-release-ipa/app.ipa' 
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
  # release:
  #   name: release
  #   needs: [deploy-playstore, deploy-TestFlight]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download aab from artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: app-release-aab
  #     - name: Download ipa from artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: app-release-ipa
  #     - name: Push to Releases
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "app-release-aab/app-release.aab, app-release-ipa/app.ipa"
  #         tag: v1.0.${{ github.run_number }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  slackNotification:
        name: Slack Notification
        needs: [deploy-TestFlight]
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_USERNAME: Production release
            SLACK_COLOR: ${{ job.status }}
            SLACK_ICON: https://firebasestorage.googleapis.com/v0/b/livvinyl-health-connector.appspot.com/o/logo.png?alt=media&token=370f338d-c0da-48a4-8a47-2dd1c5aac75d
            SLACK_FOOTER: Powered by Livvinyl Inc
            SLACK_MESSAGE: 'New Release for Android & IOS is Available for Testing Link-Android: https://play.google.com/apps/internaltest/4701654924397076080 Link-IOS: https://testflight.apple.com/join/Dmpagn2y'
            