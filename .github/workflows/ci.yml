name: "Test, Build, TestLab & Release"
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  build-android:
    name: Test, Build & upload apk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
      - run: flutter --version
      - run: flutter pub get
      # - run: flutter test
      - name: Decoding android/key.properties
        run: echo "${{ secrets.KEYPROP_PROD }}" | base64 --decode > android/key.properties
      - name: Decoding android/neumodore_key.jks
        run: echo "${{ secrets.KEYJKS_PROD }}" | base64 --decode > android/app/key.jks
      - run: flutter build apk --release
      - name: upload apk to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: app-release-apk
          path: 'build/app/outputs/flutter-apk/app-release.apk'
          if-no-files-found: echo "app-release.apk not found"
  build-ios:
    name: Test, Build & upload ipa
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
      - run: flutter --version
      - run: flutter pub get
      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: upload ipa to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: app-release-ipa
          path: 'build/ios/iphoneos/app.ipa'
          if-no-files-found: echo "app.ipa not found"
  testlab:
    name: Run UI tests with Firebase Test Lab
    needs: build-android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-release-apk
      
      - name: 'Auth Google CLI'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_FIREBASE_CEREDENTIALS }}'

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCP_FIREBASE_CEREDENTIALS }}

      - name: Run Robo Tests in Firebase Test Lab
        run: gcloud firebase test android run --type robo --app app-release-apk/app-release.apk
  release:
    name: release
    needs: [testlab, build-ios]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download apk from artifacts
        uses: actions/download-artifact@v1
        with:
          name: app-release-apk
      - name: Download ipa from artifacts
        uses: actions/download-artifact@v1
        with:
          name: app-release-ipa
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app-release-apk/app-release.apk,app-release-ipa/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}
